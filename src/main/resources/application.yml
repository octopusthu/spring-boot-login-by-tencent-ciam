server:
  port: 8080

tencent:
  ciam:
    user-store-url: https://sample.portal.tencentciam.com

spring:
  thymeleaf:
    cache: false
  security:
    oauth2:
      client:
        provider:
          tencent-ciam:
            authorization-uri: ${tencent.ciam.user-store-url}/oauth2/authorize
            token-uri: ${tencent.ciam.user-store-url}/oauth2/token
            jwk-set-uri: ${tencent.ciam.user-store-url}/oauth2/jwks
          tencent-ciam-auto:
            issuer-uri: ${tencent.ciam.user-store-url}
          spring:
            authorization-uri: http://t1.portal.ciam.com:9000/oauth2/authorize
            token-uri: http://t1.portal.ciam.com:9000/oauth2/token
            jwk-set-uri: http://t1.portal.ciam.com:9000/oauth2/jwks
        registration:
          default_client:
            provider: tencent-ciam
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid
            client-authentication-method: post
            client-name: default_client
          oidc_discovery_client:
            provider: tencent-ciam-auto
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid
            client-authentication-method: post
            client-name: oidc_discovery_client
          app1_oidc:
            provider: spring
            client-id: OTJkMzg0ZmFjZTk1NDZhNGJhZmUzNTQ1NzMzNmVmNDY
            client-secret: wRHGJoQCFojY1X5OtS75vXEyD/fj5G1
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid
            client-authentication-method: post
            client-name: app1_oidc
          messaging-client-oidc:
            provider: spring
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope: openid
            client-name: messaging-client-oidc
          messaging-client-authorization-code:
            provider: spring
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/authorized"
            scope: message.read,message.write
            client-name: messaging-client-authorization-code
          messaging-client-client-credentials:
            provider: spring
            client-id: messaging-client
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: message.read,message.write
            client-name: messaging-client-client-credentials

messages:
  base-uri: http://localhost:8090/messages
